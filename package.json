{
    "name": "vkmask",
    "displayName": "vkmask",
    "publisher": "askhento",
    "repository": {
        "url": "https://github.com/Askhento/vscode_vkmask"
    },
    "description": "UI for vkontakte AR development ",
    "version": "0.6.0",
    "engines": {
        "vscode": "^1.74.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onWebviewPanel:vkmask.projectManager",
        "workspaceContains:mask.json"
    ],
    "main": "./out/extension.js",
    "l10n": "./l10n",
    "contributes": {
        "configuration": {
            "title": "vkmask",
            "properties": {
                "vkmask.use-builtins": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show builtin resources in file pickers"
                },
                "vkmask.keep-logs": {
                    "type": "boolean",
                    "default": true,
                    "description": "Does it require to keep debug logs"
                },
                "vkmask.output-channel": {
                    "type": "boolean",
                    "default": true,
                    "description": "Open console ouput at the bottom"
                }
            }
        },
        "submenus": [
            {
                "icon": "$(add)",
                "label": "Add effect",
                "id": "vkmask.add_effect_submenu"
            },
            {
                "icon": "$(add)",
                "label": "Add plugin",
                "id": "vkmask.add_plugin_submenu"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "vkmask.dumpLogs",
                    "when": "view == vkmask.projectManager && vkmask.appState != 'ERROR' ",
                    "group": "navigation"
                },
                {
                    "command": "vkmask.jsEval",
                    "when": "view == vkmask.projectManager && vkmask.appState != 'ERROR' ",
                    "group": "navigation"
                },
                {
                    "command": "vkmask.resetSidebar",
                    "when": "view == vkmask.projectManager",
                    "group": "navigation"
                },
                {
                    "command": "vkmask.openSettings",
                    "when": "view == vkmask.projectManager",
                    "group": "navigation"
                },
                {
                    "submenu": "vkmask.add_effect_submenu",
                    "when": "view == vkmask.effects && vkmask.appState != 'ERROR'",
                    "group": "navigation"
                },
                {
                    "submenu": "vkmask.add_plugin_submenu",
                    "when": "view == vkmask.plugins && vkmask.appState != 'ERROR'",
                    "group": "navigation"
                }
            ],
            "vkmask.add_effect_submenu": [
                {
                    "command": "vkmask.add_effect.facemodel"
                },
                {
                    "command": "vkmask.add_effect.plane"
                },
                {
                    "command": "vkmask.add_effect.model3d"
                },
                {
                    "command": "vkmask.add_effect.patch"
                },
                {
                    "command": "vkmask.add_effect.light"
                },
                {
                    "command": "vkmask.add_effect.beautify"
                },
                {
                    "command": "vkmask.add_effect.liquifiedwarp"
                },
                {
                    "command": "vkmask.add_effect.colorfilter"
                },
                {
                    "command": "vkmask.add_effect.posteffect"
                }
            ],
            "vkmask.add_plugin_submenu": [
                {
                    "command": "vkmask.add_plugin.mirror"
                },
                {
                    "command": "vkmask.add_plugin.perspective"
                },
                {
                    "command": "vkmask.add_plugin.fixeddetection"
                }
            ]
        },
        "commands": [
            {
                "command": "vkmask.add_effect.facemodel",
                "title": "facemodel",
                "shortTitle": "Add facemodel effect"
            },
            {
                "command": "vkmask.add_effect.plane",
                "title": "plane",
                "shortTitle": "Add plane effect"
            },
            {
                "command": "vkmask.add_effect.model3d",
                "title": "model3d",
                "shortTitle": "Add model3d effect"
            },
            {
                "command": "vkmask.add_effect.patch",
                "title": "patch",
                "shortTitle": "Add patch effect"
            },
            {
                "command": "vkmask.add_effect.light",
                "title": "light",
                "shortTitle": "Add light effect"
            },
            {
                "command": "vkmask.add_effect.beautify",
                "title": "beautify",
                "shortTitle": "Add beautify effect"
            },
            {
                "command": "vkmask.add_effect.liquifiedwarp",
                "title": "liquifiedwarp",
                "shortTitle": "Add liquifiedwarp effect"
            },
            {
                "command": "vkmask.add_effect.colorfilter",
                "title": "colorfilter",
                "shortTitle": "Add colorfilter effect"
            },
            {
                "command": "vkmask.add_effect.posteffect",
                "title": "posteffect",
                "shortTitle": "Add posteffect effect"
            },
            {
                "command": "vkmask.add_plugin.mirror",
                "title": "mirror",
                "shortTitle": "Add mirror plugin"
            },
            {
                "command": "vkmask.add_plugin.perspective",
                "title": "perspective",
                "shortTitle": "Add perspective plugin"
            },
            {
                "command": "vkmask.add_plugin.fixeddetection",
                "title": "fixeddetection",
                "shortTitle": "Add fixeddetection plugin"
            },
            {
                "command": "vkmask.execute_command_by_id",
                "title": "execute command by Id",
                "shortTitle": "execute by id"
            },
            {
                "command": "vkmask.dumpLogs",
                "title": "%command.dumpLogs%",
                "shortTitle": "Dump vkmask logs",
                "icon": "$(zap)"
            },
            {
                "command": "vkmask.jsEval",
                "title": "test eval",
                "shortTitle": "test js eval",
                "icon": "$(beaker)"
            },
            {
                "command": "vkmask.resetSidebar",
                "title": "Reset all views in sidebar",
                "shortTitle": "Reset sidebar",
                "icon": "$(refresh)"
            },
            {
                "command": "vkmask.openSettings",
                "title": "Open vkmask settings tab",
                "shortTitle": "vkmask settings",
                "icon": "$(settings-gear)"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "vkmask_primary_bar",
                    "title": "%title.vkmask_primary_bar%",
                    "icon": "./res/smile-svgrepo-com.svg"
                }
            ],
            "auxiliaryBar": [
                {
                    "id": "vkmask_secondary_bar",
                    "title": "VK mask",
                    "icon": "./res/smile-svgrepo-com.svg"
                }
            ]
        },
        "views": {
            "vkmask_primary_bar": [
                {
                    "type": "webview",
                    "contextualTitle": "%contextTitle.projectManager%",
                    "id": "vkmask.projectManager",
                    "name": "%name.projectManager%",
                    "icon": "./node_modules/@vscode/codicons/src/icons/add.svg"
                },
                {
                    "type": "webview",
                    "contextualTitle": "%contextTitle.effects%",
                    "id": "vkmask.effects",
                    "name": "%name.effects%",
                    "icon": "./node_modules/@vscode/codicons/src/icons/add.svg"
                },
                {
                    "type": "webview",
                    "contextualTitle": "%contextTitle.plugins%",
                    "id": "vkmask.plugins",
                    "name": "%name.plugins%",
                    "icon": "./node_modules/@vscode/codicons/src/icons/add.svg"
                },
                {
                    "type": "webview",
                    "contextualTitle": "%contextTitle.inspector%",
                    "id": "vkmask.inspector",
                    "name": "%name.inspector%",
                    "icon": "./node_modules/@vscode/codicons/src/icons/arrow-circle-up.svg"
                },
                {
                    "type": "webview",
                    "contextualTitle": "%contextTitle.assetsManager%",
                    "id": "vkmask.assetsManager",
                    "name": "%name.assetsManager%",
                    "icon": "${zap}"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run clear && npm run build && npm run build:webview",
        "build": "tsc -p ./",
        "clear": "rimraf ./out",
        "watch": "sleep 5 && set NODE_ENV=dev && tsc -watch -p ./",
        "dev": "npm run clear && conc  \"npm:dev:webview\" \"npm:watch\"",
        "pretest": "npm run build && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js",
        "install:all": "npm install && cd webview-ui && npm install",
        "dev:webview": "cd webview-ui && npm run dev",
        "build:webview": "cd webview-ui && npm run build",
        "publish-patch": "npm version patch ; vsce package --out ./vsix-packages",
        "publish-minor": "npm version minor ; vsce package --out ./vsix-packages",
        "cfg-locale": "node ./parseLocale.mjs",
        "src-locale": "npx @vscode/l10n-dev export --outDir ./l10n ./src ; node ./l10n/update-missing-locale.mjs",
        "update-locale": "npm run cfg-locale && npm run src-locale"
    },
    "devDependencies": {
        "@types/glob": "^8.0.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "16.x",
        "@types/vscode": "^1.74.0",
        "@typescript-eslint/eslint-plugin": "^5.45.0",
        "@typescript-eslint/parser": "^5.45.0",
        "@vscode/l10n-dev": "^0.0.29",
        "@vscode/test-electron": "^2.2.0",
        "eslint": "^8.28.0",
        "glob": "^8.0.3",
        "mocha": "^10.1.0",
        "rimraf": "^5.0.1",
        "typescript": "^4.9.3"
    },
    "dependencies": {
        "@vscode/codicons": "^0.0.33",
        "@vscode/l10n": "^0.0.16",
        "fast-xml-parser": "^4.2.2",
        "json-source-map": "github:ramonsnir/json-source-map#typescript-definitions",
        "sharp": "^0.32.6",
        "zod": "^3.20.2",
        "zod-validation-error": "^0.3.0"
    }
}
